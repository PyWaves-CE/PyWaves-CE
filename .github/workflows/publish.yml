name: CI and Publish

on:
  push:
    branches: [main, dev]
    tags:
      - 'v*'
  pull_request:
    branches: [main, dev]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry

    - name: Install dependencies
      run: |
        python -m poetry lock
        python -m poetry install --no-root --with dev

    - name: Run tests
      env:
        PYWAVES_TEST_NODE: ${{ vars.PYWAVES_TEST_NODE }}
        PYWAVES_TEST_SECRET: ${{ secrets.PYWAVES_TEST_SECRET }}
      run: |
        python -m poetry run python workflow_ci.py

  publish:
    needs: test
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry build

    - name: Build package
      run: poetry build

    - name: Rebuild package with version tag
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        poetry version $VERSION
        poetry build

    - name: Publish to PyPI
      if: startsWith(github.ref, 'refs/tags/v')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: dist/
        skip-existing: true
        verify-metadata: true
